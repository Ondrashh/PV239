// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TvTrackServer;

#nullable disable

namespace TvTrackServer.Migrations
{
    [DbContext(typeof(TvTrackServerDbContext))]
    partial class TvTrackServerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TvTrackServer.Models.Database.EpisodeActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TvMazeId")
                        .HasColumnType("int");

                    b.Property<bool>("Watched")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("EpisodeActivities");
                });

            modelBuilder.Entity("TvTrackServer.Models.Database.ShowActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Calendar")
                        .HasColumnType("bit");

                    b.Property<bool>("Notifications")
                        .HasColumnType("bit");

                    b.Property<int>("TvMazeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("UserRated")
                        .HasColumnType("bit");

                    b.Property<int>("UserRating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ShowActivities");
                });

            modelBuilder.Entity("TvTrackServer.Models.Database.ShowList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Default")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ShowLists");
                });

            modelBuilder.Entity("TvTrackServer.Models.Database.ShowListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ShowListId")
                        .HasColumnType("int");

                    b.Property<int>("TvMazeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShowListId");

                    b.ToTable("ShowListItems");
                });

            modelBuilder.Entity("TvTrackServer.Models.Database.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TvTrackServer.Models.Database.UserRatedShow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TvMazeId")
                        .HasColumnType("int");

                    b.Property<float>("UserRating")
                        .HasColumnType("real");

                    b.Property<int>("UserRatingCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserRatedShows");
                });

            modelBuilder.Entity("TvTrackServer.Models.Database.ShowActivity", b =>
                {
                    b.HasOne("TvTrackServer.Models.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TvTrackServer.Models.Database.ShowList", b =>
                {
                    b.HasOne("TvTrackServer.Models.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TvTrackServer.Models.Database.ShowListItem", b =>
                {
                    b.HasOne("TvTrackServer.Models.Database.ShowList", null)
                        .WithMany("Shows")
                        .HasForeignKey("ShowListId");
                });

            modelBuilder.Entity("TvTrackServer.Models.Database.ShowList", b =>
                {
                    b.Navigation("Shows");
                });
#pragma warning restore 612, 618
        }
    }
}
